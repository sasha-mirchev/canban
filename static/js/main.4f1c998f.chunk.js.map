{"version":3,"sources":["TaskFilter.js","App.js","serviceWorker.js","index.js"],"names":["TaskFilter","props","console","log","test3","App","useState","id","name","status","priority","tasks1","setTasks1","isOpenCreateTaskForm","setIsOpenCreateTaskForm","taskInput","setTaskInput","isActiveButtonTaskCreate","setIsActiveButtonTaskCreate","Moveright","updateTasks","map","el","MoveLeft","MoveDown","MoveTop","taskDelete","filter","editTaskChange","e","setTaskEdit","taskEdit","target","value","saveTask","task","FilterTodo","sort","a","b","FilterInProgress","FilterRewiev","FilterDone","taskReset","className","onClick","type","onChange","length","preventDefault","push","Math","random","disabled","align","class","key","width","height","viewBox","fill","xmlns","fill-rule","d","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4f1c998f.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\n\r\nfunction TaskFilter(props) {\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n\r\n\r\n\r\n            {console.log('propsiki - ', props.test3)};\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default TaskFilter;","import React, {useState} from 'react';\r\nimport TaskFilter from \"./TaskFilter\";\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n    const inittask = [\r\n        {id: 1, name: 'Полить рассаду томатов', status: 3,  priority:3},\r\n        {id: 2, name: 'Подготовить модель лодки к покраске', status: 2, priority:2},\r\n      {id: 3, name: 'Подобрать и заказань снаряжение для похода на озеро', status: 1,  priority:1},\r\n        {id: 4, name: 'Сделать домашнее задание', status: 4, priority:2},\r\n        {id: 5, name: 'Подготовиться к рыбалке', status: 1, priority:3},\r\n       {id: 6, name: 'Купить бензин для газонокосилки', status: 4, priority:3},\r\n      {id: 7, name: 'Постиричь газон', status: 4, priority:3},\r\n       {id: 8, name: 'Это просто чуть  длиннее строка для теста правильности отображения', status: 3, priority:2},\r\n   //     {id: 9, name: 'Запланировать репетиции группы!', status: 2, priority:1},\r\n    ];\r\n\r\n\r\n    const [tasks1, setTasks1] = useState(inittask);\r\n\r\n    const [isOpenCreateTaskForm, setIsOpenCreateTaskForm] = useState(false);\r\n    const [taskInput, setTaskInput] = useState('');\r\n    const [isActiveButtonTaskCreate, setIsActiveButtonTaskCreate] = useState(false);\r\n    const [isActiveButtonLeft, setActiveButtonLeft] = useState(false);\r\n\r\n    const openCreateTaskForm = () => {\r\n        setIsOpenCreateTaskForm(true);\r\n    };\r\n\r\n\r\n    const onTaskChange = (e) => {\r\n        setIsActiveButtonTaskCreate(e.target.value.length > 4);\r\n        setTaskInput(e.target.value);\r\n    };\r\n\r\n\r\n    //Сохранение задачи по нажатию кнопки\r\n    const taskSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(taskInput);\r\n        const updateTasks = [...tasks1];\r\n        updateTasks.push({id: Math.random(), name: taskInput, status: 1, priority: 1})\r\n        setTasks1(updateTasks);\r\n        taskReset();\r\n\r\n    };\r\n\r\n\r\n    //Перемещение вправо!\r\n\r\n    const Moveright = (id) => {\r\n        const updateTasks = tasks1.map(el => {\r\n            if (el.id === id ) return {...el, status: el.status + 1}\r\n            else return el ;\r\n       })\r\n        setTasks1(updateTasks);\r\n            };\r\n    //Перемещение влево!\r\n    const MoveLeft = (id) => {\r\n        const updateTasks = tasks1.map(el => {\r\n            if (el.id === id && el.status >1) return {...el, status: el.status - 1}\r\n\r\n            else return el\r\n        })\r\n        setTasks1(updateTasks);\r\n    };\r\n\r\n\r\n        //Перемещение вниз. Уменьшенее приоритета!\r\n\r\n        const MoveDown = (id) => {\r\n            const updateTasks = tasks1.map(el => {\r\n                if (el.id === id && el.priority >1) return {...el, priority: el.priority - 1}\r\n                else return el;\r\n                           })\r\n        setTasks1(updateTasks);\r\n    };\r\n\r\n//Перемещенеи вверх. Увеличение приоритета!\r\n    const MoveTop = (id) => {\r\n        const updateTasks = tasks1.map(el => {\r\n            if (el.id === id && el.priority <3) return {...el, priority: el.priority + 1 ,}\r\n            else return el;\r\n                    })\r\n        setTasks1(updateTasks);\r\n    };\r\n\r\n\r\nlet test1 = 5555;\r\n\r\n\r\n\r\n// Удаление задачи!\r\n    const taskDelete = (id) => {\r\n        const updateTasks = tasks1.filter(el => el.id !== id);\r\n        setTasks1(updateTasks);\r\n        console.log('fsdfsfsdf', test1);\r\n    };\r\n// Редактирование задачи!\r\n\r\n    const editMode = (task) => {\r\n        setTaskEdit(task);\r\n    };\r\n\r\n    const  editTaskChange = (e) => {\r\n        setTaskEdit({...taskEdit, name: e.target.value});\r\n\r\n    }\r\n\r\n\r\n    const [taskEdit, setTaskEdit] = useState({});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const saveTask = (task) => {\r\n        const updateTasks = tasks1.map(el => {\r\n            if (el.id === task.id ) return {...el, name: task.name}\r\n            else return el;\r\n        });\r\n        setTasks1(updateTasks);\r\n        setTaskEdit({})\r\n    };\r\n\r\n\r\n\r\n// Фильтрация массивов!\r\n\r\n    const FilterTodo = tasks1.filter(function (task) {\r\n        return task.status == 1 &&\r\n        tasks1.sort(function(a, b){\r\n                return b.priority-a.priority\r\n            }\r\n            );\r\n\r\n    });\r\n\r\n\r\n    const FilterInProgress = tasks1.filter(function (task) {\r\n        return task.status == 2;\r\n    });\r\n\r\n    const FilterRewiev = tasks1.filter(function (task) {\r\n        return task.status == 3;\r\n    });\r\n    const FilterDone = tasks1.filter(function (task) {\r\n        return task.status == 4;\r\n    });\r\n\r\n\r\n    const taskReset = () => {\r\n        setTaskInput('');\r\n        setIsOpenCreateTaskForm(false);\r\n        setIsActiveButtonTaskCreate(false);\r\n    };\r\n\r\n    return (\r\n\r\n\r\n        <div>\r\n            <div className=\"container\">\r\n                <h1>Kanban</h1>\r\n\r\n                {!isOpenCreateTaskForm &&\r\n                <button className=\"btn btn-primary\" onClick={openCreateTaskForm}>Create\r\n                    Task</button>}\r\n                <hr/>\r\n                {isOpenCreateTaskForm &&\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" className=\"form-control\"\r\n                               value={taskInput}\r\n                               onChange={onTaskChange}/>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\"\r\n                            onClick={taskSubmit}\r\n                            disabled={!isActiveButtonTaskCreate}>Submit\r\n                    </button>\r\n                    <button className=\"btn btn-secondary\"\r\n                            onClick={taskReset}\r\n                    >Cancel\r\n                    </button>\r\n                    <hr/>\r\n                </form>\r\n                }\r\n\r\n                <div className=\"row\" align='center' >\r\n                    <div className=\"col-sm\" >\r\n\r\n                        <p className=\"font-weight-bold\" >To do</p>\r\n\r\n\r\n                        <hr  />\r\n\r\n                        {\r\n\r\n                            FilterTodo.map(el => (\r\n                                    <ul class=\"shadow p-3 mb-5 bg-white rounded\" >\r\n\r\n\r\n                                        <li key={el.id} class=\"list-group-item list-group-item-secondary\" >\r\n\r\n\r\n                                            {\r\n                                                taskEdit.id === el.id\r\n                                                    ?\r\n                                                    <>\r\n                                                    <input type='text'  value={taskEdit.name}\r\n                                                             onChange={editTaskChange}/>\r\n\r\n                                                             <button onClick={saveTask}>save</button>\r\n                                                </>\r\n                                                    : <span onClick={() => editMode(el)}>{el.name} </span>\r\n                                            }\r\n\r\n                                            <hr/>\r\n                                               <p class=\"text-muted\">priority -{el.priority}</p>\r\n\r\n\r\n\r\n                                                                 </li>\r\n\r\n                                        <hr/>\r\n\r\n\r\n\r\n\r\n                                        <svg className=\"bi bi-trash-fill\" width=\"3em\" height=\"1em\"\r\n                                             onClick={() => taskDelete(el.id)}\r\n                                             viewBox=\"0 0 16 16\" fill=\"currentColor\"\r\n                                             xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path fill-rule=\"evenodd\"\r\n                                                  d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5a.5.5 0 0 0-1 0v7a.5.5 0 0 0 1 0v-7z\"/>\r\n                                        </svg>\r\n\r\n\r\n\r\n                                        <svg className=\"bi bi-arrow-right\" width=\"3em\" height=\"1em\"\r\n                                             onClick={() => Moveright(el.id)}\r\n                                             viewBox=\"0 0 16 16\" fill=\"currentColor\"\r\n                                             xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path fill-rule=\"evenodd\"\r\n                                                  d=\"M10.146 4.646a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708-.708L12.793 8l-2.647-2.646a.5.5 0 0 1 0-.708z\"/>\r\n                                            <path fill-rule=\"evenodd\"\r\n                                                  d=\"M2 8a.5.5 0 0 1 .5-.5H13a.5.5 0 0 1 0 1H2.5A.5.5 0 0 1 2 8z\"/>\r\n                                        </svg>\r\n\r\n                                        <svg className=\"bi bi-arrow-down-circle-fill\" width=\"1em\" height=\"1em\"\r\n                                             onClick={() => MoveDown(el.id)}\r\n                                             viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path fill-rule=\"evenodd\"\r\n                                                  d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.5 5a.5.5 0 0 0-1 0v4.793L5.354 7.646a.5.5 0 1 0-.708.708l3 3a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 9.793V5z\"/>\r\n                                        </svg>\r\n\r\n\r\n\r\n                                        <svg className=\"bi bi-arrow-up-circle-fill\" width=\"2em\" height=\"1em\"\r\n                                             onClick={() => MoveTop(el.id)}\r\n                                             viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path fill-rule=\"evenodd\"\r\n                                                  d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-10.646.354a.5.5 0 1 1-.708-.708l3-3a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 6.207V11a.5.5 0 0 1-1 0V6.207L5.354 8.354z\"/>\r\n                                        </svg>\r\n\r\n                                    </ul>\r\n                                )\r\n                            )\r\n\r\n                        }\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col-sm\">\r\n                        <p className=\"font-weight-bold\">In progress.</p>\r\n                        <hr/>\r\n                        {\r\n                            FilterInProgress.map(el => (\r\n                                    <ul class=\"shadow p-3 mb-5 bg-white rounded\" >\r\n\r\n\r\n                                        <li key={el.id} class=\"list-group-item list-group-item-secondary\" >\r\n\r\n\r\n                                            {el.name}\r\n                                            <hr/>\r\n                                            <p className=\"text-muted\">priority -{el.priority}</p>\r\n\r\n                                        </li>\r\n\r\n                                        <hr/>\r\n\r\n                                        <svg className=\"bi bi-arrow-left\" width=\"3em\" height=\"1em\"\r\n                                             onClick={() => MoveLeft(el.id)}\r\n                                             viewBox=\"0 0 16 16\" fill=\"currentColor\"\r\n                                             xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path fill-rule=\"evenodd\"\r\n                                                  d=\"M5.854 4.646a.5.5 0 0 1 0 .708L3.207 8l2.647 2.646a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 0 1 .708 0z\"/>\r\n                                            <path fill-rule=\"evenodd\"\r\n                                                  d=\"M2.5 8a.5.5 0 0 1 .5-.5h10.5a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"/>\r\n                                        </svg>\r\n\r\n\r\n                                        <svg className=\"bi bi-trash-fill\" width=\"3em\" height=\"1em\"\r\n                                             onClick={() => taskDelete(el.id)}\r\n                                             viewBox=\"0 0 16 16\" fill=\"currentColor\"\r\n                                             xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path fill-rule=\"evenodd\"\r\n                                                  d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5a.5.5 0 0 0-1 0v7a.5.5 0 0 0 1 0v-7z\"/>\r\n                                        </svg>\r\n\r\n                                        <svg className=\"bi bi-arrow-right\" width=\"3em\" height=\"1em\"\r\n                                             onClick={() => Moveright(el.id)}\r\n                                             viewBox=\"0 0 16 16\" fill=\"currentColor\"\r\n                                             xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path fill-rule=\"evenodd\"\r\n                                                  d=\"M10.146 4.646a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708-.708L12.793 8l-2.647-2.646a.5.5 0 0 1 0-.708z\"/>\r\n                                            <path fill-rule=\"evenodd\"\r\n                                                  d=\"M2 8a.5.5 0 0 1 .5-.5H13a.5.5 0 0 1 0 1H2.5A.5.5 0 0 1 2 8z\"/>\r\n                                        </svg>\r\n\r\n                                        <svg className=\"bi bi-arrow-down-circle-fill\" width=\"1em\" height=\"1em\"\r\n                                             onClick={() => MoveDown(el.id)}\r\n                                             viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path fill-rule=\"evenodd\"\r\n                                                  d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.5 5a.5.5 0 0 0-1 0v4.793L5.354 7.646a.5.5 0 1 0-.708.708l3 3a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 9.793V5z\"/>\r\n                                        </svg>\r\n\r\n\r\n\r\n                                        <svg className=\"bi bi-arrow-up-circle-fill\" width=\"2em\" height=\"1em\"\r\n                                             onClick={() => MoveTop(el.id)}\r\n                                             viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path fill-rule=\"evenodd\"\r\n                                                  d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-10.646.354a.5.5 0 1 1-.708-.708l3-3a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 6.207V11a.5.5 0 0 1-1 0V6.207L5.354 8.354z\"/>\r\n                                        </svg>\r\n\r\n                                    </ul>\r\n                                )\r\n                            )\r\n\r\n                        }\r\n\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n                    <div className=\"col-sm\">\r\n                        <p className=\"font-weight-bold\">Review.</p>\r\n\r\n                        <hr/>\r\n\r\n                        {\r\n                            FilterRewiev.map(el => (\r\n                                    <ul class=\"shadow p-3 mb-5 bg-white rounded\" >\r\n\r\n\r\n                                        <li key={el.id} class=\"list-group-item list-group-item-secondary\" >\r\n\r\n\r\n                                            {el.name}\r\n<hr/>\r\n                                            <p className=\"text-muted\">priority -{el.priority}</p>\r\n\r\n                                        </li>\r\n\r\n                                        <hr/>\r\n\r\n                                        <svg className=\"bi bi-arrow-left\" width=\"3em\" height=\"1em\"\r\n                                             onClick={() => MoveLeft(el.id)}\r\n                                             viewBox=\"0 0 16 16\" fill=\"currentColor\"\r\n                                             xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path fill-rule=\"evenodd\"\r\n                                                  d=\"M5.854 4.646a.5.5 0 0 1 0 .708L3.207 8l2.647 2.646a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 0 1 .708 0z\"/>\r\n                                            <path fill-rule=\"evenodd\"\r\n                                                  d=\"M2.5 8a.5.5 0 0 1 .5-.5h10.5a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"/>\r\n                                        </svg>\r\n\r\n\r\n                                        <svg className=\"bi bi-trash-fill\" width=\"3em\" height=\"1em\"\r\n                                             onClick={() => taskDelete(el.id)}\r\n                                             viewBox=\"0 0 16 16\" fill=\"currentColor\"\r\n                                             xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path fill-rule=\"evenodd\"\r\n                                                  d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5a.5.5 0 0 0-1 0v7a.5.5 0 0 0 1 0v-7z\"/>\r\n                                        </svg>\r\n\r\n                                        <svg className=\"bi bi-arrow-right\" width=\"3em\" height=\"1em\"\r\n                                             onClick={() => Moveright(el.id)}\r\n                                             viewBox=\"0 0 16 16\" fill=\"currentColor\"\r\n                                             xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path fill-rule=\"evenodd\"\r\n                                                  d=\"M10.146 4.646a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708-.708L12.793 8l-2.647-2.646a.5.5 0 0 1 0-.708z\"/>\r\n                                            <path fill-rule=\"evenodd\"\r\n                                                  d=\"M2 8a.5.5 0 0 1 .5-.5H13a.5.5 0 0 1 0 1H2.5A.5.5 0 0 1 2 8z\"/>\r\n                                        </svg>\r\n\r\n                                        <svg className=\"bi bi-arrow-down-circle-fill\" width=\"1em\" height=\"1em\"\r\n                                             onClick={() => MoveDown(el.id)}\r\n                                             viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path fill-rule=\"evenodd\"\r\n                                                  d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.5 5a.5.5 0 0 0-1 0v4.793L5.354 7.646a.5.5 0 1 0-.708.708l3 3a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 9.793V5z\"/>\r\n                                        </svg>\r\n\r\n\r\n\r\n                                        <svg className=\"bi bi-arrow-up-circle-fill\" width=\"2em\" height=\"1em\"\r\n                                             onClick={() => MoveTop(el.id)}\r\n                                             viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path fill-rule=\"evenodd\"\r\n                                                  d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-10.646.354a.5.5 0 1 1-.708-.708l3-3a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 6.207V11a.5.5 0 0 1-1 0V6.207L5.354 8.354z\"/>\r\n                                        </svg>\r\n\r\n                                    </ul>\r\n                                )\r\n                            )\r\n\r\n                        }\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className=\"col-sm\">\r\n                        <p className=\"font-weight-bold\">Done.</p>\r\n\r\n                        <hr/>\r\n\r\n                        {\r\n                            FilterDone.map(el => (\r\n                                    <ul class=\"shadow p-3 mb-5 bg-white rounded\" >\r\n\r\n\r\n                                        <li key={el.id} class=\"list-group-item list-group-item-secondary\" >\r\n\r\n\r\n                                            {el.name}\r\n<hr/>\r\n                                            <p className=\"text-muted\">priority -{el.priority}</p>\r\n\r\n                                        </li>\r\n\r\n                                        <hr/>\r\n\r\n                                        <svg className=\"bi bi-arrow-left\" width=\"3em\" height=\"1em\"\r\n                                             onClick={() => MoveLeft(el.id)}\r\n                                             viewBox=\"0 0 16 16\" fill=\"currentColor\"\r\n                                             xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path fill-rule=\"evenodd\"\r\n                                                  d=\"M5.854 4.646a.5.5 0 0 1 0 .708L3.207 8l2.647 2.646a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 0 1 .708 0z\"/>\r\n                                            <path fill-rule=\"evenodd\"\r\n                                                  d=\"M2.5 8a.5.5 0 0 1 .5-.5h10.5a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"/>\r\n                                        </svg>\r\n\r\n\r\n                                        <svg className=\"bi bi-trash-fill\" width=\"3em\" height=\"1em\"\r\n                                             onClick={() => taskDelete(el.id)}\r\n                                             viewBox=\"0 0 16 16\" fill=\"currentColor\"\r\n                                             xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path fill-rule=\"evenodd\"\r\n                                                  d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5a.5.5 0 0 0-1 0v7a.5.5 0 0 0 1 0v-7z\"/>\r\n                                        </svg>\r\n\r\n\r\n                                        <svg className=\"bi bi-arrow-down-circle-fill\" width=\"1em\" height=\"1em\"\r\n                                             onClick={() => MoveDown(el.id)}\r\n                                             viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path fill-rule=\"evenodd\"\r\n                                                  d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.5 5a.5.5 0 0 0-1 0v4.793L5.354 7.646a.5.5 0 1 0-.708.708l3 3a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 9.793V5z\"/>\r\n                                        </svg>\r\n\r\n\r\n\r\n                                        <svg className=\"bi bi-arrow-up-circle-fill\" width=\"2em\" height=\"1em\"\r\n                                             onClick={() => MoveTop(el.id)}\r\n                                             viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path fill-rule=\"evenodd\"\r\n                                                  d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-10.646.354a.5.5 0 1 1-.708-.708l3-3a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 6.207V11a.5.5 0 0 1-1 0V6.207L5.354 8.354z\"/>\r\n                                        </svg>\r\n\r\n                                    </ul>\r\n                                )\r\n                            )\r\n\r\n                        }\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <hr/>\r\n\r\n<TaskFilter  test3={test1}/>\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}